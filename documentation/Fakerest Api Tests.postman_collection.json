{
	"info": {
		"_postman_id": "09c6ccbb-54d2-4a32-a9ff-f754a2adc82f",
		"name": "Fakerest Api Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20945007",
		"_collection_link": "https://grey-crater-840381.postman.co/workspace/workspace1~716d3f18-fc78-4d57-b375-0ad0ae212d1c/collection/20945007-09c6ccbb-54d2-4a32-a9ff-f754a2adc82f?action=share&source=collection_link&creator=20945007"
	},
	"item": [
		{
			"name": "Books",
			"item": [
				{
					"name": "GET All Books",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InRhcmltMTYzIiwicGFzc3dvcmQiOiI1NTcwMTYzTWFAIiwiaWF0IjoxNjY2MTY5Mzk3fQ.KEWL9cUwpY66AJ1pSnZYcgaK1bSXtlQl1ExNFM5WK5o",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/Books",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Book by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/Books?bookid=1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Books"
							],
							"query": [
								{
									"key": "bookid",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 0,\r\n    \"title\": \"Postman Test Book\",\r\n    \"description\": \"Postman Test Description\",\r\n    \"pageCount\": 150,\r\n    \"excerpt\": \"Postman Test Excerpt\",\r\n    \"publishDate\": \"2023-11-01T00:00:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/Books",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Update Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"title\": \"Postman Updated Book\",\r\n    \"description\": \"Postman Updated Description\",\r\n    \"pageCount\": 200,\r\n    \"excerpt\": \"Postman Updated Excerpt\",\r\n    \"publishDate\": \"2023-11-15T00:00:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/Books/2",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Books",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://fakerestapi.azurewebsites.net/api/v1/Books/8",
							"protocol": "https",
							"host": [
								"fakerestapi",
								"azurewebsites",
								"net"
							],
							"path": [
								"api",
								"v1",
								"Books",
								"8"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authors",
			"item": [
				{
					"name": "Get All Authors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/Authors",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Author by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/Authors/3",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Authors",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 0,\r\n    \"idBook\": 1,\r\n    \"firstName\": \"mert\",\r\n    \"lastName\": \"deniz\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/Authors",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Update Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"idBook\": 2,\r\n    \"firstName\": \"Jane\",\r\n    \"lastName\": \"Smith\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/Authors/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Authors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Author",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/Authors/4",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"Authors",
								"4"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}